---
- name: Get latest version
  ansible.builtin.uri:
    url: https://api.github.com/repos/eza-community/eza/releases/latest
  register: latest_eza_raw_data
  changed_when: false

- name: Register latest version
  ansible.builtin.set_fact:
    latest_eza_ver: "{{ latest_eza_raw_data.json.tag_name }}"

- name: Get current version on the system
  ansible.builtin.shell:
    cmd: set -o pipefail && $(which eza) --version | grep -oP 'v\d+\.\d+\.\d+'
  args:
    executable: /bin/bash
  register: curr_eza_ver
  changed_when: false
  failed_when: false

- name: Set the target version to latest {{ latest_eza_ver }}
  ansible.builtin.set_fact:
    target_eza_ver: "{{ latest_eza_ver }}"
  when: target_eza_ver is not defined

- name: Set validity for installation
  ansible.builtin.set_fact:
    eza_install: "{{ curr_eza_ver.stdout != target_eza_ver }}"

- name: Show versions and installation status
  ansible.builtin.debug:
    msg:
      - "Current eza version: {{ curr_eza_ver.stdout | default('not installed') }}"
      - "Latest eza version: {{ latest_eza_ver }}"
      - "Target eza version: {{ target_eza_ver }}"
      - "Install: {{ eza_install }}"

- name: Download target version {{ target_eza_ver }}
  ansible.builtin.get_url:
    url: "https://github.com/eza-community/eza/releases/download/{{ target_eza_ver }}/eza_x86_64-unknown-linux-gnu.tar.gz"
    dest: "{{ tmp_folder_path }}/eza.tar.gz"
    mode: "0644"
  when: eza_install

- name: Extract from archive
  ansible.builtin.unarchive:
    src: "{{ tmp_folder_path }}/eza.tar.gz"
    dest: "{{ tmp_folder_path }}"
    remote_src: true
    creates: "{{ tmp_folder_path }}/eza"
  when: eza_install

- name: Copy to {{ target_local_bin_path }}
  become: true
  ansible.builtin.copy:
    remote_src: true
    src: "{{ tmp_folder_path }}/eza"
    dest: "{{ target_local_bin_path }}"
    mode: "0755"
  when: eza_install

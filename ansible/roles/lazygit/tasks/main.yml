---
- name: Get latest raw data
  ansible.builtin.uri:
    url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
  register: latest_lazygit_raw_data
  changed_when: false

- name: Get latest version
  ansible.builtin.set_fact:
    latest_lazygit_ver: "{{ latest_lazygit_raw_data.json.tag_name }}"

- name: Get system version
  ansible.builtin.shell:
    cmd: set -o pipefail && $(which lazygit) --version | grep -oP 'version=\K[^,]+' | awk 'NR==1' | sed 's/^/v/'
  args:
    executable: /bin/bash
  register: sys_lazygit_ver
  changed_when: false
  failed_when: false

- name: Fix locked version by adding 'v' prefix
  ansible.builtin.set_fact:
    lazygit:
      version: "v{{ lazygit.version }}"
  when: lazygit.version is defined and lazygit.version | regex_search('^\d')

- name: Set target version according to locked configuration
  ansible.builtin.set_fact:
    target_lazygit_ver: "{{ lazygit.version }}"
  when: lazygit.version is defined and lazygit.version != 'latest'

- name: Set target version to latest {{ latest_lazygit_ver }}
  ansible.builtin.set_fact:
    target_lazygit_ver: "{{ latest_lazygit_ver }}"
  when: target_lazygit_ver is not defined

- name: Set validity for installation
  ansible.builtin.set_fact:
    install_lazygit: "{{ sys_lazygit_ver.stdout != target_lazygit_ver }}"

- name: Show versions and installation status
  ansible.builtin.debug:
    msg:
      - "locked version             : {{ lazygit.version if lazygit.version is defined else '' }}"
      - "system version             : {{ sys_lazygit_ver.stdout }}"
      - "latest version             : {{ latest_lazygit_ver }}"
      - "should install/update      : {{ install_lazygit }}"
      - "install version            : {{ target_lazygit_ver if install_lazygit else '' }}"

- name: Installation by extracting binaries
  when: install_lazygit
  block:
    - name: Set target architecture
      ansible.builtin.set_fact:
        target_arch: "{{ ansible_architecture }}"

    - name: Set target os
      ansible.builtin.set_fact:
        target_os: "{{ ansible_os_family | replace('Debian', 'Linux') }}"

    - name: Set archive file name
      ansible.builtin.set_fact:
        lazygit_archive_name: "lazygit_{{ target_lazygit_ver | regex_replace('^.', '') }}_{{ target_os }}_{{ target_arch }}.tar.gz"

    - name: Download target version {{ target_lazygit_ver }}
      ansible.builtin.get_url:
        url: "https://github.com/jesseduffield/lazygit/releases/download/{{ target_lazygit_ver }}/{{ lazygit_archive_name }}"
        dest: "{{ tmp_folder_path }}/lazygit.tar.gz"
        mode: "0644"

    - name: Extract from archive
      ansible.builtin.unarchive:
        src: "{{ tmp_folder_path }}/lazygit.tar.gz"
        dest: "{{ tmp_folder_path }}"
        remote_src: true
        creates: "{{ tmp_folder_path }}/lazygit"

    - name: Install to {{ target_local_bin_path }} # noqa no-changed-when
      become: true
      ansible.builtin.command: "install {{ tmp_folder_path }}/lazygit {{ target_local_bin_path }}"

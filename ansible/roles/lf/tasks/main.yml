---
- name: Get latest raw data
  ansible.builtin.uri:
    url: https://api.github.com/repos/gokcehan/lf/releases/latest
  register: latest_lf_raw_data
  changed_when: false

- name: Get latest version
  ansible.builtin.set_fact:
    latest_lf_ver: "{{ latest_lf_raw_data.json.tag_name }}"

- name: Get system version
  ansible.builtin.shell:
    cmd: set -o pipefail && $(which lf) --version
  args:
    executable: /bin/bash
  register: sys_lf_ver
  changed_when: false
  failed_when: false

- name: Set target version according to locked configuration
  ansible.builtin.set_fact:
    target_lf_ver: "{{ lf.version }}"
  when: lf.version is defined and lf.version != 'latest'

- name: Set target version to latest {{ latest_lf_ver }}
  ansible.builtin.set_fact:
    target_lf_ver: "{{ latest_lf_ver }}"
  when: target_lf_ver is not defined

- name: Set validity for installation
  ansible.builtin.set_fact:
    install_lf: "{{ sys_lf_ver.stdout != target_lf_ver }}"

- name: Show versions and installation status
  ansible.builtin.debug:
    msg:
      - "locked version             : {{ lf.version if lf.version is defined else '' }}"
      - "system version             : {{ sys_lf_ver.stdout }}"
      - "latest version             : {{ latest_lf_ver }}"
      - "should install/update      : {{ install_lf }}"
      - "install version            : {{ target_lf_ver if install_lf else '' }}"

- name: Installation by extracting binaries
  when: install_lf
  block:
    - name: Set target architecture
      ansible.builtin.set_fact:
        target_arch: "{{ ansible_architecture | replace('x86_64', 'amd64') | replace('aarch64', 'arm64') }}"

    - name: Set target os
      ansible.builtin.set_fact:
        target_os: "{{ ansible_os_family | replace('Debian', 'linux') | replace('Darwin', 'darwin') }}"

    - name: Set archive file name
      ansible.builtin.set_fact:
        lf_archive_name: "lf-{{ target_os }}-{{ target_arch }}.tar.gz"

    - name: Download target version {{ target_lf_ver }}
      ansible.builtin.get_url:
        url: "https://github.com/gokcehan/lf/releases/download/{{ target_lf_ver }}/{{ lf_archive_name }}"
        dest: "{{ tmp_folder_path }}/lf.tar.gz"
        mode: "0644"

    - name: Extract from archive
      ansible.builtin.unarchive:
        src: "{{ tmp_folder_path }}/lf.tar.gz"
        dest: "{{ tmp_folder_path }}"
        remote_src: true
        creates: "{{ tmp_folder_path }}/lf"

    - name: Copy to {{ target_local_bin_path }}
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: "{{ tmp_folder_path }}/lf"
        dest: "{{ target_local_bin_path }}"
        mode: "0755"

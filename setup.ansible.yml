---
- name: Dotfiles setup
  hosts: "{{ target_group | default('localhost') }}"
  vars:
    # ------------- Meta -------------
    target_local_path: "/usr/local"
    target_local_lib_path: "/usr/local/lib"
    target_local_share_path: "/usr/local/share"
    target_local_bin_path: "/usr/local/bin"
    zsh_completions_path: "/usr/share/zsh/vendor-completions"
    log_dir_base_path: "{{ playbook_dir }}/tests/logs"
    log_filename: "ansible.log"
    # ------------- Role versions -------------
    # NOTE: default: version -> latest, build_from_source -> false
    nodejs:
      version: latest
    nvim:
      version: stable
      build_from_source: false # true supported
    fastfetch:
      version: latest
      build_from_source: false # true supported
    eza:
      version: latest
    bat:
      version: latest
    lazygit:
      version: latest
    procs:
      version: latest
    delta:
      version: latest
    fzf:
      version: latest
    ripgrep:
      version: latest
    btop:
      version: latest
    fd:
      version: latest
    zoxide:
      version: latest
    lf:
      version: latest
    # ------------- Python Packages to download -------------
    # NOTE: comment out to disable a package
    python_pkgs:
      - cmake # or cmake==3.29.2
      - pynvim # or pynvim==0.5.0
      - pre-commit # or pre-commit==3.7.0
    # ------------- Nodejs Packages to download -------------
    nodejs_pkgs:
      - neovim
    # ------------- Roles -------------
    # NOTE: comment out to disable a role
    active_roles:
      - core
      - python
      - nodejs
      - zsh
      - ripgrep
      - fzf
      - bat
      - fd
      - lazygit
      - eza
      - procs
      - delta
      - git
      - fastfetch
      - btop
      - zoxide
      - nvim
      - lf
      - dotfiles
  tasks:
    - name: Roles
      block:
        - name: Initialize
          ansible.builtin.include_role:
            name: init
          tags:
            - always

        - name: Run active roles
          ansible.builtin.include_role:
            name: "{{ active_role }}"
            apply:
              tags:
                - "{{ active_role }}"
          loop: "{{ active_roles if active_roles is iterable else [] }}"
          loop_control:
            loop_var: active_role
          tags:
            - always

      rescue:
        - name: Handle failure
          when: ansible_failed_result is defined
          # become: true
          tags:
            - always
          block:
            - name: Print failed task
              ansible.builtin.debug:
                msg: "{{ ansible_failed_result }}"

            - name: Create a temp file for failed task details
              ansible.builtin.tempfile:
                state: file
                suffix: .log
              register: tempfile_failed_task

            - name: Save failed task details
              ansible.builtin.copy:
                content: "{{ ansible_failed_result }}"
                dest: "{{ tempfile_failed_task.path }}"
                mode: "0644"

            - name: Create log directory
              ansible.builtin.file:
                path: "{{ log_dir_base_path }}"
                state: directory
                mode: "0777"

            - name: Fetch failed task details
              ansible.builtin.fetch:
                src: "{{ tempfile_failed_task.path }}"
                dest: "{{ log_dir_base_path }}/{{ log_filename }}"
                flat: true

            - name: Delete temp file
              ansible.builtin.file:
                path: "{{ tempfile_failed_task.path }}"
                state: absent
      always:
        - name: Cleanup
          ansible.builtin.include_role:
            name: cleanup
          tags:
            - always
